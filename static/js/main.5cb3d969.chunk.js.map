{"version":3,"sources":["components/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","useState","inputData","setInputData","list","localStorage","getItem","JSON","parse","getLocalItems","items","setItems","useEffect","setItem","stringify","className","TextField","type","id","label","variant","value","onChange","e","target","Fab","color","onClick","map","element","index","Button","size","updatedItems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSA+EeA,EA9DF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZN,WACpB,IAAIG,EAAOC,aAAaC,QAAQ,SAEhC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAM0BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAJAC,qBAAU,WACRP,aAAaQ,QAAQ,QAASN,KAAKO,UAAUJ,MAC5C,CAACA,IAGF,sBAAKK,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,8CAEF,sBAAKA,UAAU,QAAf,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,GAAG,iBACHC,MAAM,WACNC,QAAQ,WACRC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAAaoB,EAAEC,OAAOH,UAP3C,YAUE,cAACI,EAAA,EAAD,CAAKV,UAAU,MAAMW,MAAM,UAAU,aAAW,MAAMC,QAjC5C,WACVzB,IACFS,EAAS,GAAD,mBAAKD,GAAL,CAAYR,KACpBC,EAAa,MA8BX,SACE,cAAC,IAAD,SAGJ,qBAAKY,UAAU,eAAf,SACGL,EAAMkB,KAAI,SAACC,EAASC,GACnB,OACE,sBAAKf,UAAU,WAAf,UACE,6BAAKc,IACL,cAACE,EAAA,EAAD,CACEX,QAAQ,YACRY,KAAK,QACLjB,UAAU,MACVY,QAAS,kBAvCJ,SAACT,GAClB,IAAMe,EAAevB,EAAMwB,QAAO,SAACL,EAASC,GAC1C,OAAOA,IAAUZ,KAEnBP,EAASsB,GAmCkBE,CAAWL,IAJ5B,sBAF6BA,YClD5BM,MARf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5cb3d969.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport \"./ToDo.css\";\r\n\r\nconst getLocalItems = () => {\r\n  let list = localStorage.getItem(\"lists\");\r\n\r\n  if (list) {\r\n    return JSON.parse(list);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst ToDo = () => {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalItems());\r\n\r\n  const addItem = () => {\r\n    if (inputData) {\r\n      setItems([...items, inputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    const updatedItems = items.filter((element, index) => {\r\n      return index !== id;\r\n    });\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"lists\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      <div className=\"Header\">\r\n        <h1>To Do List</h1>\r\n      </div>\r\n      <div className=\"Input\">\r\n        <TextField\r\n          type=\"text\"\r\n          id=\"outlined-basic\"\r\n          label=\"Add ToDo\"\r\n          variant=\"outlined\"\r\n          value={inputData}\r\n          onChange={(e) => setInputData(e.target.value)}\r\n        ></TextField>\r\n        &nbsp; &nbsp;\r\n        <Fab className=\"add\" color=\"primary\" aria-label=\"add\" onClick={addItem}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n      <div className=\"DisplayItems\">\r\n        {items.map((element, index) => {\r\n          return (\r\n            <div className=\"EachItem\" key={index}>\r\n              <h3>{element}</h3>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                className=\"del\"\r\n                onClick={() => deleteItem(index)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import \"./App.css\";\nimport ToDo from \"./components/ToDo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}